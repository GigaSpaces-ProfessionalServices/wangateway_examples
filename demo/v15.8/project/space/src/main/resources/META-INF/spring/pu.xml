<?xml version="1.0" encoding="UTF-8"?>
<!--
    top level element of the Spring configuration. Note the multiple namespace definition for both
    GigaSpaces and Spring. You can simply copy and paste this portion of the pu.xml file
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-gateway="http://www.openspaces.org/schema/core/gateway"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
    http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
    http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/remoting/openspaces-remoting.xsd
    http://www.openspaces.org/schema/core/gateway http://www.openspaces.org/schema/core/gateway/openspaces-gateway.xsd">

    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="properties">
            <props>
                <prop key="securityEnabled">false</prop>
                <prop key="localSpaceName">mySpace</prop>
                <prop key="local-gateway-name">central</prop>
                <prop key="remote-gateway-name-a">west</prop>
                <prop key="remote-gateway-name-b">east</prop>
            </props>
        </property>
    </bean>

    <context:component-scan base-package="com.gigaspaces.demo" />

    <!-- Enables to configure Spring beans through annotations   -->
    <context:annotation-config />

    <!-- Enable @PostPrimary and others annotation support. -->
    <os-core:annotation-support />

    <!-- Enables using @Polling and @Notify annotations to creating polling and notify containers  -->
    <os-events:annotation-support />

    <!-- Enables using @RemotingService and other remoting related annotations   -->
    <os-remoting:annotation-support />

    <os-gateway:targets id="gatewayTargets" local-gateway-name="${local-gateway-name}" >
        <os-gateway:target name="${remote-gateway-name-a}" />
        <os-gateway:target name="${remote-gateway-name-b}" />
    </os-gateway:targets>

    <!--
        A bean representing a Space. Here we configure an embedded space. Note
        that we do not specify here the cluster topology of the Space. It is
        declared by the os-sla:sla element of this pu.xml file.
    -->

    <bean id="space" class="org.openspaces.core.space.EmbeddedSpaceFactoryBean">
        <property name="name" value="${localSpaceName}"/>

        <property name="secured" value="${securityEnabled}"/>

        <!--
        <property name="securityConfig">
            <bean class="org.openspaces.core.space.SecurityConfig">
                <property name="username" value="${username}" />
                <property name="password" value="${password}" />
            </bean>
        </property>
        -->
        <property name="mirrored" value="false"/>
        <property name="customComponent" ref="gatewayTargets"/>
        <property name="properties">
            <props>
                <prop key="space-config.engine.cache_policy">1</prop>
                <prop key="space-config.engine.memory_usage.high_watermark_percentage">97</prop>
                <prop key="space-config.engine.memory_usage.write_only_block_percentage">96</prop>
                <prop key="space-config.engine.memory_usage.write_only_check_percentage">95</prop>
                <prop key="space-config.engine.memory_usage.low_watermark_percentage">94</prop>
                <prop key="space-config.engine.memory_usage.gc-before-shortage">false</prop>
            </props>
        </property>
    </bean>
    <!-- Use the bean declaration because security is a boolean and because of xsd rules it will generate an error

    <os-core:embedded-space id="space" space-name="${localSpaceName}" mirrored="false" gateway-targets="gatewayTargets">
        <os-core:security secured="true"/>
        <os-core:properties>
            <props>
    -->
                <!-- ALL IN CACHE -->
    <!--
                <prop key="space-config.engine.cache_policy">1</prop>
                <prop key="space-config.engine.memory_usage.high_watermark_percentage">97</prop>
                <prop key="space-config.engine.memory_usage.write_only_block_percentage">96</prop>
                <prop key="space-config.engine.memory_usage.write_only_check_percentage">95</prop>
                <prop key="space-config.engine.memory_usage.low_watermark_percentage">94</prop>
                <prop key="space-config.engine.memory_usage.gc-before-shortage">false</prop>
            </props>
        </os-core:properties>
    </os-core:embedded-space>
    -->

    <!-- Defines a distributed transaction manager.-->
    <os-core:distributed-tx-manager id="transactionManager" />

    <!-- Define the GigaSpace instance that the application will use to access the space  -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>

</beans>

